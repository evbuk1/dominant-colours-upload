{
  "swagger": "2.0",
  "info": {
    "title": "Songkick Demo API",
    "version": "v1"
  },
  "basePath": "/v1",
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "password",
      "tokenUrl": "/oauth/token"
    }
  },
  "paths": {
    "/locations": {
      "post": {
        "summary": "Add a location",
        "tags": [
          "Locations"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "attributes": {
                      "type": "object",
                      "required": [
                        "city",
                        "state"
                      ],
                      "properties": {
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "security": [
          {
            "oauth2": [

            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Location created"
          }
        }
      },
      "get": {
        "summary": "Listing locations",
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Comma-separated list of fields to sort by. Available fields: `first_name`, `last_name`, `email`, `updated_at`, `created_at`. Prefix a field by `-` to reverse the sort order. For example `foo,-bar` sorts by `foo` in ascending order then by `bar` in descending order."
          },
          {
            "name": "filter[first_name][contains]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `first_name` attribute contains the given value as a substring (case-insensitive)."
          },
          {
            "name": "filter[last_name][contains]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `last_name` attribute contains the given value as a substring (case-insensitive)."
          },
          {
            "name": "filter[email][contains]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `email` attribute contains the given value as a substring (case-insensitive)."
          },
          {
            "name": "filter[created_at][lt]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `created_at` attribute is strictly less than the given value."
          },
          {
            "name": "filter[created_at][lte]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `created_at` attribute is less than or equal to the given value."
          },
          {
            "name": "filter[created_at][gt]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `created_at` attribute is strictly greater than the given value."
          },
          {
            "name": "filter[created_at][gte]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `created_at` attribute is greater than or equal to the given value."
          },
          {
            "name": "filter[updated_at][lt]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `updated_at` attribute is strictly less than the given value."
          },
          {
            "name": "filter[updated_at][lte]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `updated_at` attribute is less than or equal to the given value."
          },
          {
            "name": "filter[updated_at][gt]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `updated_at` attribute is strictly greater than the given value."
          },
          {
            "name": "filter[updated_at][gte]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `updated_at` attribute is greater than or equal to the given value."
          }
        ],
        "security": [
          {
            "oauth2": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "listing locations"
          }
        }
      }
    },
    "/locations/{id}": {
      "get": {
        "summary": "Show location",
        "tags": [
          "Locations"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "show location"
          }
        }
      },
      "patch": {
        "summary": "Update location",
        "tags": [
          "Locations"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "security": [
          {
            "oauth2": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "User updated"
          }
        }
      },
      "delete": {
        "summary": "Remove location",
        "tags": [
          "Locations"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [

            ]
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Add a user",
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "attributes": {
                      "type": "object",
                      "required": [
                        "first_name",
                        "last_name",
                        "email",
                        "password"
                      ],
                      "properties": {
                        "first_name": {
                          "type": "string"
                        },
                        "last_name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "password": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "security": [
          {
            "oauth2": [

            ]
          }
        ],
        "responses": {
          "201": {
            "description": "User created"
          }
        }
      },
      "get": {
        "summary": "Listing users",
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Comma-separated list of fields to sort by. Available fields: `first_name`, `last_name`, `email`, `updated_at`, `created_at`. Prefix a field by `-` to reverse the sort order. For example `foo,-bar` sorts by `foo` in ascending order then by `bar` in descending order."
          },
          {
            "name": "filter[first_name][contains]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `first_name` attribute contains the given value as a substring (case-insensitive)."
          },
          {
            "name": "filter[last_name][contains]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `last_name` attribute contains the given value as a substring (case-insensitive)."
          },
          {
            "name": "filter[email][contains]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `email` attribute contains the given value as a substring (case-insensitive)."
          },
          {
            "name": "filter[created_at][lt]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `created_at` attribute is strictly less than the given value."
          },
          {
            "name": "filter[created_at][lte]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `created_at` attribute is less than or equal to the given value."
          },
          {
            "name": "filter[created_at][gt]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `created_at` attribute is strictly greater than the given value."
          },
          {
            "name": "filter[created_at][gte]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `created_at` attribute is greater than or equal to the given value."
          },
          {
            "name": "filter[updated_at][lt]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `updated_at` attribute is strictly less than the given value."
          },
          {
            "name": "filter[updated_at][lte]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `updated_at` attribute is less than or equal to the given value."
          },
          {
            "name": "filter[updated_at][gt]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `updated_at` attribute is strictly greater than the given value."
          },
          {
            "name": "filter[updated_at][gte]",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Causes the response to include only records whose `updated_at` attribute is greater than or equal to the given value."
          }
        ],
        "security": [
          {
            "oauth2": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "listing users"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Show user",
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "show user"
          }
        }
      },
      "patch": {
        "summary": "Update user",
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "first_name": {
                          "type": "string"
                        },
                        "last_name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "password": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "security": [
          {
            "oauth2": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "User updated"
          }
        }
      },
      "delete": {
        "summary": "Remove user",
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "security": [
          {
            "oauth2": [

            ]
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          }
        }
      }
    }
  }
}